package com.familybucket.backend;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

import java.util.Optional;

@Controller // This means that this class is a Controller
@RequestMapping(path="/api") // This means URL's start with /demo (after Application path)
public class MainController {
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private ItemRepository itemRepository;

    @PostMapping(path="/add") // Map ONLY POST Requests
    public @ResponseBody String addNewUser (@RequestParam String name
            , @RequestParam String email) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        /*
        Item n = new Item();
        n.setName(name);
        n.setEmail(email);
        itemRepository.save(n);*/
        return "Saved";
    }

    @CrossOrigin
    @GetMapping(path="/all")
    public @ResponseBody Iterable<Item> getAllItem() {
        // This returns a JSON or XML with the users
        return itemRepository.findAll();
    }

    @CrossOrigin
    @GetMapping(path="/{id}")
    public @ResponseBody Optional<Item> findItemById(@PathVariable String id) {
        // This returns a JSON or XML with the users
        if (id.isEmpty() || !id.matches("^[0-9]*$")){
            return Optional.empty();
        }
        return itemRepository.findById(Integer.valueOf(id));
    }
}